// Generated from Minijava.g4 by ANTLR 4.4
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class MinijavaLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__35=1, T__34=2, T__33=3, T__32=4, T__31=5, T__30=6, T__29=7, T__28=8, 
		T__27=9, T__26=10, T__25=11, T__24=12, T__23=13, T__22=14, T__21=15, T__20=16, 
		T__19=17, T__18=18, T__17=19, T__16=20, T__15=21, T__14=22, T__13=23, 
		T__12=24, T__11=25, T__10=26, T__9=27, T__8=28, T__7=29, T__6=30, T__5=31, 
		T__4=32, T__3=33, T__2=34, T__1=35, T__0=36, Identifier=37, IntegerLiteral=38, 
		WS=39;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''"
	};
	public static final String[] ruleNames = {
		"T__35", "T__34", "T__33", "T__32", "T__31", "T__30", "T__29", "T__28", 
		"T__27", "T__26", "T__25", "T__24", "T__23", "T__22", "T__21", "T__20", 
		"T__19", "T__18", "T__17", "T__16", "T__15", "T__14", "T__13", "T__12", 
		"T__11", "T__10", "T__9", "T__8", "T__7", "T__6", "T__5", "T__4", "T__3", 
		"T__2", "T__1", "T__0", "Identifier", "JavaLetter", "JavaLetterOrDigit", 
		"IntegerLiteral", "DecimalIntegerLiteral", "IntegertypeSuffix", "DecimalNumeral", 
		"Digits", "Digit", "NonZeroDigit", "DigitsAndUnderscores", "DigitOrUnderscore", 
		"Underscores", "WS"
	};


	public MinijavaLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Minijava.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2)\u0148\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\3\2\3\2"+
		"\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3"+
		"\7\3\7\3\b\3\b\3\t\3\t\3\t\3\n\3\n\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\r"+
		"\3\r\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20"+
		"\3\20\3\20\3\20\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\23"+
		"\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25"+
		"\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\30\3\30"+
		"\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31"+
		"\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\33\3\33"+
		"\3\34\3\34\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37"+
		"\3\37\3\37\3\37\3\37\3 \3 \3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3"+
		"$\3$\3$\3$\3$\3$\3%\3%\3&\3&\7&\u010a\n&\f&\16&\u010d\13&\3\'\3\'\3(\3"+
		"(\3)\3)\3*\3*\5*\u0117\n*\3+\3+\3,\3,\3,\5,\u011e\n,\3,\3,\3,\5,\u0123"+
		"\n,\5,\u0125\n,\3-\3-\5-\u0129\n-\3-\5-\u012c\n-\3.\3.\5.\u0130\n.\3/"+
		"\3/\3\60\6\60\u0135\n\60\r\60\16\60\u0136\3\61\3\61\5\61\u013b\n\61\3"+
		"\62\6\62\u013e\n\62\r\62\16\62\u013f\3\63\6\63\u0143\n\63\r\63\16\63\u0144"+
		"\3\63\3\63\2\2\64\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31"+
		"\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65"+
		"\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M\2O\2Q(S\2U\2W\2Y\2[\2]\2_\2a\2c\2"+
		"e)\3\2\7\6\2&&C\\aac|\7\2&&\62;C\\aac|\4\2NNnn\3\2\63;\5\2\13\f\17\17"+
		"\"\"\u0148\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2"+
		"\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27"+
		"\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2"+
		"\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2"+
		"\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2"+
		"\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2"+
		"\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2Q\3\2\2\2\2e\3\2\2\2\3g\3\2\2\2\5i"+
		"\3\2\2\2\7p\3\2\2\2\tr\3\2\2\2\13x\3\2\2\2\rz\3\2\2\2\17|\3\2\2\2\21~"+
		"\3\2\2\2\23\u0081\3\2\2\2\25\u0083\3\2\2\2\27\u0086\3\2\2\2\31\u008a\3"+
		"\2\2\2\33\u008c\3\2\2\2\35\u0091\3\2\2\2\37\u0097\3\2\2\2!\u009c\3\2\2"+
		"\2#\u009e\3\2\2\2%\u00a6\3\2\2\2\'\u00ab\3\2\2\2)\u00b3\3\2\2\2+\u00b5"+
		"\3\2\2\2-\u00ba\3\2\2\2/\u00c1\3\2\2\2\61\u00c8\3\2\2\2\63\u00db\3\2\2"+
		"\2\65\u00dd\3\2\2\2\67\u00df\3\2\2\29\u00e1\3\2\2\2;\u00e3\3\2\2\2=\u00ea"+
		"\3\2\2\2?\u00f1\3\2\2\2A\u00f3\3\2\2\2C\u00f6\3\2\2\2E\u00fb\3\2\2\2G"+
		"\u00ff\3\2\2\2I\u0105\3\2\2\2K\u0107\3\2\2\2M\u010e\3\2\2\2O\u0110\3\2"+
		"\2\2Q\u0112\3\2\2\2S\u0114\3\2\2\2U\u0118\3\2\2\2W\u0124\3\2\2\2Y\u0126"+
		"\3\2\2\2[\u012f\3\2\2\2]\u0131\3\2\2\2_\u0134\3\2\2\2a\u013a\3\2\2\2c"+
		"\u013d\3\2\2\2e\u0142\3\2\2\2gh\7_\2\2h\4\3\2\2\2ij\7r\2\2jk\7w\2\2kl"+
		"\7d\2\2lm\7n\2\2mn\7k\2\2no\7e\2\2o\6\3\2\2\2pq\7.\2\2q\b\3\2\2\2rs\7"+
		"y\2\2st\7j\2\2tu\7k\2\2uv\7n\2\2vw\7g\2\2w\n\3\2\2\2xy\7]\2\2y\f\3\2\2"+
		"\2z{\7/\2\2{\16\3\2\2\2|}\7,\2\2}\20\3\2\2\2~\177\7,\2\2\177\u0080\7,"+
		"\2\2\u0080\22\3\2\2\2\u0081\u0082\7*\2\2\u0082\24\3\2\2\2\u0083\u0084"+
		"\7k\2\2\u0084\u0085\7h\2\2\u0085\26\3\2\2\2\u0086\u0087\7k\2\2\u0087\u0088"+
		"\7p\2\2\u0088\u0089\7v\2\2\u0089\30\3\2\2\2\u008a\u008b\7>\2\2\u008b\32"+
		"\3\2\2\2\u008c\u008d\7o\2\2\u008d\u008e\7c\2\2\u008e\u008f\7k\2\2\u008f"+
		"\u0090\7p\2\2\u0090\34\3\2\2\2\u0091\u0092\7h\2\2\u0092\u0093\7c\2\2\u0093"+
		"\u0094\7n\2\2\u0094\u0095\7u\2\2\u0095\u0096\7g\2\2\u0096\36\3\2\2\2\u0097"+
		"\u0098\7x\2\2\u0098\u0099\7q\2\2\u0099\u009a\7k\2\2\u009a\u009b\7f\2\2"+
		"\u009b \3\2\2\2\u009c\u009d\7}\2\2\u009d\"\3\2\2\2\u009e\u009f\7g\2\2"+
		"\u009f\u00a0\7z\2\2\u00a0\u00a1\7v\2\2\u00a1\u00a2\7g\2\2\u00a2\u00a3"+
		"\7p\2\2\u00a3\u00a4\7f\2\2\u00a4\u00a5\7u\2\2\u00a5$\3\2\2\2\u00a6\u00a7"+
		"\7g\2\2\u00a7\u00a8\7n\2\2\u00a8\u00a9\7u\2\2\u00a9\u00aa\7g\2\2\u00aa"+
		"&\3\2\2\2\u00ab\u00ac\7d\2\2\u00ac\u00ad\7q\2\2\u00ad\u00ae\7q\2\2\u00ae"+
		"\u00af\7n\2\2\u00af\u00b0\7g\2\2\u00b0\u00b1\7c\2\2\u00b1\u00b2\7p\2\2"+
		"\u00b2(\3\2\2\2\u00b3\u00b4\7\177\2\2\u00b4*\3\2\2\2\u00b5\u00b6\7v\2"+
		"\2\u00b6\u00b7\7t\2\2\u00b7\u00b8\7w\2\2\u00b8\u00b9\7g\2\2\u00b9,\3\2"+
		"\2\2\u00ba\u00bb\7u\2\2\u00bb\u00bc\7v\2\2\u00bc\u00bd\7c\2\2\u00bd\u00be"+
		"\7v\2\2\u00be\u00bf\7k\2\2\u00bf\u00c0\7e\2\2\u00c0.\3\2\2\2\u00c1\u00c2"+
		"\7n\2\2\u00c2\u00c3\7g\2\2\u00c3\u00c4\7p\2\2\u00c4\u00c5\7i\2\2\u00c5"+
		"\u00c6\7v\2\2\u00c6\u00c7\7j\2\2\u00c7\60\3\2\2\2\u00c8\u00c9\7U\2\2\u00c9"+
		"\u00ca\7{\2\2\u00ca\u00cb\7u\2\2\u00cb\u00cc\7v\2\2\u00cc\u00cd\7g\2\2"+
		"\u00cd\u00ce\7o\2\2\u00ce\u00cf\7\60\2\2\u00cf\u00d0\7q\2\2\u00d0\u00d1"+
		"\7w\2\2\u00d1\u00d2\7v\2\2\u00d2\u00d3\7\60\2\2\u00d3\u00d4\7r\2\2\u00d4"+
		"\u00d5\7t\2\2\u00d5\u00d6\7k\2\2\u00d6\u00d7\7p\2\2\u00d7\u00d8\7v\2\2"+
		"\u00d8\u00d9\7n\2\2\u00d9\u00da\7p\2\2\u00da\62\3\2\2\2\u00db\u00dc\7"+
		"+\2\2\u00dc\64\3\2\2\2\u00dd\u00de\7\60\2\2\u00de\66\3\2\2\2\u00df\u00e0"+
		"\7-\2\2\u00e08\3\2\2\2\u00e1\u00e2\7?\2\2\u00e2:\3\2\2\2\u00e3\u00e4\7"+
		"t\2\2\u00e4\u00e5\7g\2\2\u00e5\u00e6\7v\2\2\u00e6\u00e7\7w\2\2\u00e7\u00e8"+
		"\7t\2\2\u00e8\u00e9\7p\2\2\u00e9<\3\2\2\2\u00ea\u00eb\7U\2\2\u00eb\u00ec"+
		"\7v\2\2\u00ec\u00ed\7t\2\2\u00ed\u00ee\7k\2\2\u00ee\u00ef\7p\2\2\u00ef"+
		"\u00f0\7i\2\2\u00f0>\3\2\2\2\u00f1\u00f2\7=\2\2\u00f2@\3\2\2\2\u00f3\u00f4"+
		"\7(\2\2\u00f4\u00f5\7(\2\2\u00f5B\3\2\2\2\u00f6\u00f7\7v\2\2\u00f7\u00f8"+
		"\7j\2\2\u00f8\u00f9\7k\2\2\u00f9\u00fa\7u\2\2\u00faD\3\2\2\2\u00fb\u00fc"+
		"\7p\2\2\u00fc\u00fd\7g\2\2\u00fd\u00fe\7y\2\2\u00feF\3\2\2\2\u00ff\u0100"+
		"\7e\2\2\u0100\u0101\7n\2\2\u0101\u0102\7c\2\2\u0102\u0103\7u\2\2\u0103"+
		"\u0104\7u\2\2\u0104H\3\2\2\2\u0105\u0106\7#\2\2\u0106J\3\2\2\2\u0107\u010b"+
		"\5M\'\2\u0108\u010a\5O(\2\u0109\u0108\3\2\2\2\u010a\u010d\3\2\2\2\u010b"+
		"\u0109\3\2\2\2\u010b\u010c\3\2\2\2\u010cL\3\2\2\2\u010d\u010b\3\2\2\2"+
		"\u010e\u010f\t\2\2\2\u010fN\3\2\2\2\u0110\u0111\t\3\2\2\u0111P\3\2\2\2"+
		"\u0112\u0113\5S*\2\u0113R\3\2\2\2\u0114\u0116\5W,\2\u0115\u0117\5U+\2"+
		"\u0116\u0115\3\2\2\2\u0116\u0117\3\2\2\2\u0117T\3\2\2\2\u0118\u0119\t"+
		"\4\2\2\u0119V\3\2\2\2\u011a\u0125\7\62\2\2\u011b\u0122\5]/\2\u011c\u011e"+
		"\5Y-\2\u011d\u011c\3\2\2\2\u011d\u011e\3\2\2\2\u011e\u0123\3\2\2\2\u011f"+
		"\u0120\5c\62\2\u0120\u0121\5Y-\2\u0121\u0123\3\2\2\2\u0122\u011d\3\2\2"+
		"\2\u0122\u011f\3\2\2\2\u0123\u0125\3\2\2\2\u0124\u011a\3\2\2\2\u0124\u011b"+
		"\3\2\2\2\u0125X\3\2\2\2\u0126\u012b\5[.\2\u0127\u0129\5_\60\2\u0128\u0127"+
		"\3\2\2\2\u0128\u0129\3\2\2\2\u0129\u012a\3\2\2\2\u012a\u012c\5[.\2\u012b"+
		"\u0128\3\2\2\2\u012b\u012c\3\2\2\2\u012cZ\3\2\2\2\u012d\u0130\7\62\2\2"+
		"\u012e\u0130\5]/\2\u012f\u012d\3\2\2\2\u012f\u012e\3\2\2\2\u0130\\\3\2"+
		"\2\2\u0131\u0132\t\5\2\2\u0132^\3\2\2\2\u0133\u0135\5a\61\2\u0134\u0133"+
		"\3\2\2\2\u0135\u0136\3\2\2\2\u0136\u0134\3\2\2\2\u0136\u0137\3\2\2\2\u0137"+
		"`\3\2\2\2\u0138\u013b\5[.\2\u0139\u013b\7a\2\2\u013a\u0138\3\2\2\2\u013a"+
		"\u0139\3\2\2\2\u013bb\3\2\2\2\u013c\u013e\7a\2\2\u013d\u013c\3\2\2\2\u013e"+
		"\u013f\3\2\2\2\u013f\u013d\3\2\2\2\u013f\u0140\3\2\2\2\u0140d\3\2\2\2"+
		"\u0141\u0143\t\6\2\2\u0142\u0141\3\2\2\2\u0143\u0144\3\2\2\2\u0144\u0142"+
		"\3\2\2\2\u0144\u0145\3\2\2\2\u0145\u0146\3\2\2\2\u0146\u0147\b\63\2\2"+
		"\u0147f\3\2\2\2\17\2\u010b\u0116\u011d\u0122\u0124\u0128\u012b\u012f\u0136"+
		"\u013a\u013f\u0144\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}